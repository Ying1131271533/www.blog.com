


Blade 模板
composer require laravel/breeze --dev
php artisan breeze:install

这个扩展是自带的，不用安装






用户授权 

安装
composer require laravel/jetstream

传统的Web界面 - 课程使用这个
php artisan jetstream:install livewire

Vue.js的界面
php artisan jetstream:install livewire


安装完后会提示编译安装 npm install && npm run dev 如果是使用自己的界面，就不用管

之后会自动给我们注册很多登录、注册、密码相关的路由，还有生成了auth文件夹，里面的一些页面、migrations文件夹的数据迁移等文件

auth里面的login.blade.php页面内容注释掉，添加我们自己的login页面内容


查看路由
php artisan route:list


数据迁移
php artisan migrate


用户登录后跳转的页面
app\Providers\RouteServiceProvider.php -> public const HOME = '/user';




错误提示的语言包

文章
https://blog.csdn.net/weixin_46622106/article/details/115412490

安装
composer require caouecs/laravel-lang # 这个不知道怎么添加修改编辑提示内容
composer require caouecs/laravel-lang:~3.0

把vendor\laravel-lang\lang\src\zh-CN 文件夹复制一份到 \lang里面，这个好像也不管用~~~

为了方便编辑提示信息，到config/filesystems.php -> links添加一条软连接
public_path('zh-CN') => 'vendor\laravel-lang\lang\src\zh-CN',

执行
php artisan storage:link


修改配置
config/app.php -> locale = 'zh-CN'







分页


使用bootstrap样式


App\Providers\AppServiceProvider.php -> boot()
boot方法里面加入：
// 将分页默认视图修改为bootstrap
Paginator::useBootstrapFour(); // Bootstrap4
或者
Paginator::useBootstrapFive(); // Bootstrap5



自定义分页视图

使用 vendor:publish 命令将它们导出到 resources/views/vendor 目录：
php artisan vendor:publish --tag=laravel-pagination




resources\views\vendor\pagination\bootstrap-4.blade.php 复制一份名称改为 my-page.blade.php

或者是下面这个 - 这里取决于上面使用的是 useBootstrapFive() 还是 useBootstrapFour()

resources\views\vendor\pagination\bootstrap-5.blade.php 复制一份名称改为 my-page.blade.php


App\Providers\AppServiceProvider.php -> boot()
boot方法里面加入：
Paginator::defaultView('vendor.pagination.my-page'); // 默认视图
Paginator::defaultSimpleView('vendor.pagination.my-page'); // 默认的简单视图


手册
http://laravel.p2hp.com/cndocs/9.x/pagination#scroll-nav__4






自定义辅助函数

添加php文件
app/helpers.php

修改 composer.json

"autoload": {
	"psr-4": {
		"App\\": "app/",
		"Database\\Factories\\": "database/factories/",
		"Database\\Seeders\\": "database/seeders/"
	},
	// 加入下面这个
	"files": [
		"app/helpers.php"
	]
},

更新
composer update





队列


数据库需要先创建表
php artisan queue:table
php artisan migrate


生成任务类 - 评论邮件
php artisan make:job CommentEmail


运行队列 - 所有
php artisan queue:work


处理单个任务
php artisan queue:work --once


处理给定连接的特定队列来进一步自定义队列工作程序
php artisan queue:work redis --queue=emails






























